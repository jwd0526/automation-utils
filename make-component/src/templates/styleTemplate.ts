import { StyleType } from '../types';

export class StyleTemplateGenerator {
  static generate(classes: string[], ids: string[], styleType: StyleType, originalCommand?: string): string {
    if (styleType === 'tailwind' || styleType === 'none') {
      return '';
    }

    const isScss = styleType === 'scss';
    const header = this.generateHeader(originalCommand, isScss);
    const comment = isScss ? '// Generated styles' : '/* Generated styles */';
    let styles = header + comment + '\n\n';

    classes.forEach(className => {
      if (isScss) {
        styles += `.${className} {\n  // Add your styles here\n}\n\n`;
      } else {
        styles += `.${className} {\n  /* Add your styles here */\n}\n\n`;
      }
    });

    ids.forEach(id => {
      if (isScss) {
        styles += `#${id} {\n  // Add your styles here\n}\n\n`;
      } else {
        styles += `#${id} {\n  /* Add your styles here */\n}\n\n`;
      }
    });

    return styles.trim();
  }

  private static generateHeader(originalCommand?: string, isScss?: boolean): string {
    if (!originalCommand) return '';

    const timestamp = new Date().toISOString();

    if (isScss) {
      return `// Generated by React Component Generator\n// Command: ${originalCommand}\n// Generated at: ${timestamp}\n\n`;
    } else {
      return `/* Generated by React Component Generator\n * Command: ${originalCommand}\n * Generated at: ${timestamp}\n */\n\n`;
    }
  }
}